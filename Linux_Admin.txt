Squid Proxy --- Blocking sites
INSTALL SQUID , START AND ENABLE SQUID
To check squid version:
#squid -v

By default, the Squid proxy listens on port 3128. You can verify it using the following command:
ss -antpl | grep squid

Next, you will need to configure authentication in Squid to accept connections and serve as an HTTP proxy. 
To do so, first install the apache2-utils package with the following command:

#apt-get install apache2-utils -y
Next, create a file to store the Squid users and passwords:

touch /etc/squid/htpasswd
Next, create a new squid user with the name web1 using the following command:

htpasswd /etc/squid/htpasswd web1
cat /etc/squid/htpasswd


Next, edit the Squid main configuration file to define the user authentication.

nano /etc/squid/squid.conf
Add the following lines at the beginning of the file:

auth_param basic program /usr/lib/squid3/basic_ncsa_auth /etc/squid/htpasswd
acl ncsa_users proxy_auth REQUIRED
http_access allow ncsa_users

systemctl restart squid

If you want to block specific domains for users then edit the Squid configuration file:

nano /etc/squid/squid.conf
Add the following rules at the beginning of the file:

acl block dstdomain "https://net.cloudinfrastructureservices.co.uk/etc/squid/website_block.txt"
http_access deny block
Save and close the file then create a website_block.txt file with the following command:

nano /etc/squid/website_block.txt
Add all domains that you want to block:

.facebook.com
.twitter.com
.linkedin.com
www.pornhub.com
.instagram.com
www.badwebsites.com

------------------------------------------------------------------------------------
****hostname:
[root@dns named]# cat /etc/hostname 
dns.server.com

****/etc/hosts file:
[root@dns named]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
192.168.80.136	dns.server.com


yum install bind bind-utils -y

****/etc/resolv.conf file:
[root@dns named]# cat /etc/resolv.conf
# Generated by NetworkManager
search localdomain server.com
nameserver 192.168.80.136


****/etc/named.conf file:
[root@dns named]# cat /etc/named.conf
//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//
// See the BIND Administrator's Reference Manual (ARM) for details about the
// configuration located in /usr/share/doc/bind-{version}/Bv9ARM.html

options {
	listen-on port 53 { 127.0.0.1;192.168.80.136; };
	listen-on-v6 port 53 { ::1; };
	directory 	"/var/named";
	dump-file 	"/var/named/data/cache_dump.db";
	statistics-file "/var/named/data/named_stats.txt";
	memstatistics-file "/var/named/data/named_mem_stats.txt";
	recursing-file  "/var/named/data/named.recursing";
	secroots-file   "/var/named/data/named.secroots";
	allow-query     { localhost;192.168.80.0/24; };

	/* 
	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
	 - If you are building a RECURSIVE (caching) DNS server, you need to enable 
	   recursion. 
	 - If your recursive DNS server has a public IP address, you MUST enable access 
	   control to limit queries to your legitimate users. Failing to do so will
	   cause your server to become part of large scale DNS amplification 
	   attacks. Implementing BCP38 within your network would greatly
	   reduce such attack surface 
	*/
	recursion yes;

	dnssec-enable yes;
	dnssec-validation yes;

	/* Path to ISC DLV key */
	bindkeys-file "/etc/named.root.key";

	managed-keys-directory "/var/named/dynamic";

	pid-file "/run/named/named.pid";
	session-keyfile "/run/named/session.key";
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "." IN {
	type hint;
	file "named.ca";
};

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";



*****/etc/named.rfc1912.zones file:
[root@dns named]# cat /etc/named.rfc1912.zones 
// named.rfc1912.zones:
//
// Provided by Red Hat caching-nameserver package 
//
// ISC BIND named zone configuration for zones recommended by
// RFC 1912 section 4.1 : localhost TLDs and address zones
// and http://www.ietf.org/internet-drafts/draft-ietf-dnsop-default-local-zones-02.txt
// (c)2007 R W Franks
// 
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//

zone "localhost.localdomain" IN {
	type master;
	file "named.localhost";
	allow-update { none; };
};

zone "localhost" IN {
	type master;
	file "named.localhost";
	allow-update { none; };
};

zone "1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa" IN {
	type master;
	file "named.loopback";
	allow-update { none; };
};

zone "1.0.0.127.in-addr.arpa" IN {
	type master;
	file "named.loopback";
	allow-update { none; };
};

zone "0.in-addr.arpa" IN {
	type master;
	file "named.empty";
	allow-update { none; };
};

zone "server.com" IN {
	type master;
	file "/var/named/forward.zone";
	allow-update { none; };
};

zone "80.168.192.in-addr.arpa" IN {
	type master;
	file "/var/named/reverse.zone";
	allow-update { none; };
};

cp /var/named/named.empty /var/named/forward.zone
cp /var/named/named.empty /var/named/reverse.zone

****/var/named/forward.zone file:
[root@dns named]# cat /var/named/forward.zone 
$TTL 1D
@	IN SOA	server.com. root (
					0	; serial
					1D	; refresh
					1H	; retry
					1W	; expire
					3H )	; minimum
@	IN	NS	dns.server.com.

dns	IN	A	192.168.80.136
@	IN	A	192.168.80.136

dns2	IN	A	192.168.80.137
mail	IN	A	192.168.80.13c8
@	IN	MX 0	mail.server.com.
www	IN	CNAME	dns.server.com.
ftp	IN	CNAME	dns.server.com. 


****/var/named/reverse.zone file:
[root@dns named]# cat /var/named/reverse.zone 
$TTL 1D
@	IN SOA	server.com. root (
					0	; serial
					1D	; refresh
					1H	; retry
					1W	; expire
					3H )	; minimum
@	IN	NS	dns.server.com.

136 PTR dns.server.com.
137 PTR dns2.server.com.
138 PTR mail.server.com.


steps:
   76  systemctl restart named
   77  nslookup dns.server.com
   78  nslookup dns2.server.com
   81  nslookup mail.server.com
   82  dig -x 192.168.80.136
   83  dig -x 192.168.80.137
   84  dig -x 192.168.80.138


NIS CONFIGURATION STEPS-
---------------------------------------------------------------------
Server Side
Set IP, HOSTNAME AND NISDOMANNANME

TO SET Nisdomainname:-
#  nisdomainname binay.nis.com
FROM ABOVE COMMAND NISDOMAINNAME WILL SET TEMPORARY.
TO ADD PERMANENTLY:
ADD ENTRY IN /etc/sysconfig/network 
cat /etc/sysconfig/network
# Created by anaconda
NISDOMAIN=binay.nis.com

Install YPSERV PCKG
yum install ypserv -y 
 Go to /var/yp and edit makefile 
nano /var/yp/Makefile

Go To below line and put # as mentioned belw
all:  passwd group hosts #rpc services netid protocols mail \ 

RUN 
/usr/lib64/yp/ypinit -m
and press ctrl + D

Start below services
systemctl status ypserv yppasswdd

Configure firewall or disable it.
create two or more users



Client side Configuration:
SET IP, HOSTNAME NISDOMAINNAME 
add entry in /etc/sysconfig/network to make permanent 

Install ypbind pckg

edit /etc/yp.conf 



add entry in last 
domain binay.nis.com server 192.168.80.128

systemctl status ypbind
ypcat passwd  ---> you will get all user's details of server.

After all this steps, if you create users, it will not show in clientside.
so to update run following command on server machine:
 make -C /var/yp




authconfig --enablenis --nisdomain=binay.nis.com --nisserver=192.168.80.128,192.168.80.197 --enablemkhomedir --update
here 80.128 is server ip and 80.197 is client's ip .


now try to login in clent with users from server side

----------------------------------------------------------------------------------------
NFS Server Configuration:
We need two machines .
1. Server
2.client

On server:-
# yum install nfs* -y
mkdir /public
chmod 777 /public

Modify the SELinux context of the /public directory if SELinux is enabled by executing the
below command. # chcon -t public_content_t /public

# touch f{1..10}

# vim /etc/exports
/public 192.168.80.0/24 (rw, sync)
save and exit 


) Export the above shared directory to the defined client systems by 
# exportfs -rv

# systemctl restart nfs-server
# systemctl enable nfs-server
# systemctl restart rpcbind

# firewall-cmd --permanent -add-service=nfs
# firewall-cmd --permanent -add-service=mountd
# firewall-cmd --permanent -add-service=rpcbind

CLIENT CONFIGURATION:
# yum install nfs-utils* -y
# showmount -e 192.168.80.198   ---> IP OF Server
Create one mount point to mount the NFS shared directory by # mkdir /<mount point>
command.
Example : # mkdir /mnt/nfs

 Mount the NFS shared directory on the above created mount point
 # mount 192.168.80.198:/public /mnt/nfs 
 
 These are temporary mount only. ie., If the system is rebooted these are unmounted
automatically and we have to mount again after the system is rebooted.
(v) So, if we want to mount it permanently, then open /etc/fstab file and put an entry of the
mount point.
# vim /etc/fstab 


 
Mount all the mount points as mentioned in the above /etc/fstab file by # mount -a
command.
#df -hT 


--------------------------------------------------------------------------------------------
 LDAP Server Configuration: (192.168.1.113)
------------------------------------------

# yum install -y openldap openldap-clients openldap-servers migrationtools

# slappasswd -s redhat -n > /etc/openldap/passwd

# openssl req -new -x509 -nodes -out /etc/openldap/certs/cert.pem -keyout /etc/openldap/certs/priv.pem -days 365

# cd /etc/openldap/certs

# chown ldap:ldap *

# chmod 600 priv.pem

Prepare the LDAP database:
# cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG

Generate database files (don’t worry about error messages!):
# slaptest

Change LDAP database ownership:
# chown ldap:ldap /var/lib/ldap/*

# systemctl enable slapd

# systemctl start slapd

Check the LDAP activity:
# netstat -lt | grep ldap

To start the configuration of the LDAP server, add the cosine & nis LDAP schemas:

# cd /etc/openldap/schema

# ldapadd -Y EXTERNAL -H ldapi:/// -D "cn=config" -f cosine.ldif

# ldapadd -Y EXTERNAL -H ldapi:/// -D "cn=config" -f nis.ldif

Then, create the /etc/openldap/changes.ldif file and paste the following lines (replace PASSWORD with the previously created password like {SSHA}l8A+0c+lRcymtWuIFbbc3EJ1PRZz9mGg ):

# vim /etc/openldap/changes.ldif

dn: olcDatabase={2}hdb,cn=config
changetype: modify
replace: olcSuffix
olcSuffix: dc=example,dc=com

dn: olcDatabase={2}hdb,cn=config
changetype: modify
replace: olcRootDN
olcRootDN: cn=Manager,dc=example,dc=com

dn: olcDatabase={2}hdb,cn=config
changetype: modify
replace: olcRootPW
olcRootPW: PASSWORD

dn: cn=config
changetype: modify
replace: olcTLSCertificateFile
olcTLSCertificateFile: /etc/openldap/certs/cert.pem

dn: cn=config
changetype: modify
replace: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/openldap/certs/priv.pem

dn: cn=config
changetype: modify
replace: olcLogLevel
olcLogLevel: -1

dn: olcDatabase={1}monitor,cn=config
changetype: modify
replace: olcAccess
olcAccess: {0}to * by dn.base="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth" read by dn.base="cn=Manager,dc=example,dc=com" read by * none
Note: A problem with olcTLSCertificateFile and olcTLSCertificateKeyFile has been reported in recent versions of OpenLDAP (details) coming with RHEL 7.5; these attributes have to be modified at the same time:

dn: cn=config
changetype: modify
replace: olcTLSCertificateFile
olcTLSCertificateFile: /etc/openldap/certs/cert.pem
-
replace: olcTLSCertificateKeyFile 
olcTLSCertificateKeyFile: /etc/openldap/certs/priv.pem

Send the new configuration to the slapd server:

# ldapmodify -Y EXTERNAL -H ldapi:/// -f /etc/openldap/changes.ldif

Create the /etc/openldap/base.ldif file and paste the following lines:

# vim /etc/openldap/base.ldif

dn: dc=example,dc=com
dc: example
objectClass: top
objectClass: domain

dn: ou=People,dc=example,dc=com
ou: People
objectClass: top
objectClass: organizationalUnit

dn: ou=Group,dc=example,dc=com
ou: Group
objectClass: top
objectClass: organizationalUnit

Build the structure of the directory service:

# ldapadd -x -w redhat -D cn=Manager,dc=example,dc=com -f /etc/openldap/base.ldif

Create two users for testing:

# mkdir /home/guests
# useradd -d /home/guests/ldapuser01 ldapuser01
# passwd ldapuser01
Changing password for user ldapuser01.
New password: user01ldap
Retype new password: user01ldap
passwd: all authentication tokens updated successfully.
# useradd -d /home/guests/ldapuser02 ldapuser02
# passwd ldapuser02
Changing password for user ldapuser02.
New password: user02ldap
Retype new password: user02ldap
passwd: all authentication tokens updated successfully.
User Account Migration
Go to the directory for the migration of the user accounts:

# cd /usr/share/migrationtools
Edit the migrate_common.ph file and replace in the following lines:
# vim migrate_common.ph 
$DEFAULT_MAIL_DOMAIN = "example.com";
$DEFAULT_BASE = "dc=example,dc=com";
Create the current users in the directory service:

# grep ":10[0-9][0-9]" /etc/passwd > passwd
# ./migrate_passwd.pl passwd users.ldif
# ldapadd -x -w redhat -D cn=Manager,dc=example,dc=com -f users.ldif
adding new entry "uid=ldapuser01,ou=People,dc=example,dc=com"
adding new entry "uid=ldapuser02,ou=People,dc=example,dc=com"
# grep ":10[0-9][0-9]" /etc/group > group
# ./migrate_group.pl group groups.ldif
# ldapadd -x -w redhat -D cn=Manager,dc=example,dc=com -f groups.ldif
adding new entry "cn=ldapuser01,ou=Group,dc=example,dc=com"
adding new entry "cn=ldapuser02,ou=Group,dc=example,dc=com"
Test the configuration with the user called ldapuser01:

# ldapsearch -x cn=ldapuser01 -b dc=example,dc=com
Firewall Configuration
Add a new service to the firewall (ldap: port tcp 389):

# firewall-cmd --permanent --add-service=ldap
Reload the firewall configuration:

# firewall-cmd --reload
Edit the /etc/rsyslog.conf file and add the following line:

local4.* /var/log/ldap.log
Restart the rsyslog service:

# firewall-cmd --add-service={nfs3,mountd,rpc-bind} --permanent 

# systemctl restart rsyslog

-----
Configure & Configure NFS:

# yum install -y nfs* rpcbind mountd
# vim /etc/exports
/home *(rw,sync)

Start & Enable the Services:

# systemctl start rpcbind
# systemctl start nfs
# systemctl enable rpcbind
# systemctl enable nfs

Test NFS Configuration:
# showmount -e

-------------------------------------------------------------------------
Virtual hosting
yum install httpd -y
systemctl start  httpd
[root@localhost var]# cd /var/www/
[root@localhost www]# mkdir web1 web2
[root@localhost www]# cd web1/
[root@localhost web1]# nano index.html -----write some content and do same for web2
cd /etc/httpd/conf.d
[root@localhost conf.d]# vi virtualhost.conf
<VirtualHost 192.168.80.198 >
ServerAdmin  root@localhost
DocumentRoot /var/www/web1
ServerName   www.web1.com
</virtualhost>

<VirtualHost 192.168.80.198 >
ServerAdmin  root@localhost
DocumentRoot /var/www/web2
ServerName   www.web2.com
</virtualhost>

vi /etc/hosts
192.168.80.198 www.web1.com
192.168.80.198 www.web2.com

systemctl restart httpd
search www.web1.com in firefox

Port Based Hosting
add below line in /etc/httpd/conf.d/virtualhost.conf

<VirtualHost 192.168.80.198:8999 >
ServerAdmin  root@localhost
DocumentRoot /var/www/web3
ServerName   www.web3.com
</virtualhost>

By default the web server runs on port number  80.  If we want to configure on deferent port number, 
 we   have to add the port number in the main configuration file. 
       
# vim   /etc/httpd/conf/httpd.conf    *  
 Go to  Listen : 80  line  and  open new line below this line  and  type as,   
 Listen : 8999         (save  and  exit  this  file)  

By default SELinux will allow 80 and  8080 port numbers only for webserver. 
If we use different port numbers other than 80 or 8080 then execute the following command.   
# semanage   port   -a   -t   http_port_t   -p   tcp   8999 

# yum remove sendmail
Add hostname entry in /etc/hosts file:
192.168.1.150 server1.example.com server1    #Check your IP address with ip a
Disable SELinux to reduce the complexity in postfix configuration.
vi /etc/sysconfig/selinux
SELINUX=disabled
Install EPEL Repository if not installed
yum install epel-release
Allow the Apache default port 80 through your firewall/router:
firewall-cmd --permanent --add-port=80/tcp
firewall-cmd --reload
Sequence 2. Install Postfix
Postfix is a free open source mail transfer agent (MTA). It is fast, secure and easy to administer. It’s an alternative to Sendmail.

Install Postifix using command:
yum install postfix
Configuring Postfix by edit /etc/postfix/main.cf file:
# vi /etc/postfix/main.cf
# Line no 77 - Uncomment and set to your FQDN
myhostname = server1.example.com
mydomain = example.com     # Line 85 - Uncomment and Set domain name
myorigin = $mydomain       # Line 101 - Uncomment
inet_interfaces = all      # Line 115 - Uncomment and Set ipv4
inet_protocols = all       # Line 121 - Change to all
# Line 166 - Comment
#mydestination = $myhostname, localhost.$mydomain, localhost,
# Line 167 - Uncomment
mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain
mynetworks = 192.168.1.0/24, 127.0.0.0/8 
# Line 266 - Uncomment & add IP range
home_mailbox = Maildir/    # Line 421 - Uncomment
Start/restart Postfix service now:
systemctl enable postfix
systemctl restart postfix
Sequence 3.  Testing Postfix mail server

Create a test user called “sangwan“.
useradd sangwan
Set the password for the user:
passwd sangwan
Access the server via Telnet and enter the commands manually shown in red colored text.
telnet localhost smtp
Sample output:
Trying ::1...
Connected to localhost.
Escape character is '^]'.
220 server1.example.com ESMTP Postfix
ehlo localhost             # Type this line
250-server1.example.com
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-ENHANCEDSTATUSCODES
250-8BITMIME
250 DSN
mail from:<sangwan>        # Mail sender address
250 2.1.0 Ok
rcpt to:<sangwan>          # Mail receiver address
250 2.1.5 Ok
data                       # To input body of Email
354 End data with <CR><LF>.<CR><LF>
Welcome to TheSkillPedia mail server     # Body of the Email
.                          # After you finished with content
250 2.0.0 Ok: queued as E2B522032F93
quit                       # Exit from mail
221 2.0.0 Bye
Connection closed by foreign host.
Now navigate to the user “sangwan“ mail directory and check whether the new mail has been received.
ls /home/sangwan/Maildir/new/
Sample output:
1437722056.Vfd01I203e3e7M938078.server1.example.com
Success! A new mail is received to the user “sangwan“.
To read the mail, enter the following command:
cat /home/sangwan/Maildir/new/1437722056.Vfd01I203e3e7M938078.server1.example.com
Sample output:
Return-Path: <sangwan@example.com>
X-Original-To: sangwan
Delivered-To: sangwan@example.com
Received: from localhost (localhost [IPv6:::1])
by server1.example.com (Postfix) with ESMTP id E2B522032F93
for <sangwan>; Fri, 24 Jul 2015 12:42:36 +0530 (IST)
Message-Id: <20150724071330.E2B522032F93@server1.example.com>
Date: Fri, 24 Jul 2015 12:42:36 +0530 (IST)
From: sangwan@example.com

Welcome to TheSkillPedia mail server
Sequence 4. Install Dovecot
Dovecot is an open source IMAP and POP3 mail server for Unix/Linux systems.

To install it, run:
yum install dovecot
Configuring Dovecot by editing file /etc/dovecot/dovecot.conf ,
vi /etc/dovecot/dovecot.conf
protocols = imap pop3 lmtp             # Line 24 - umcomment
Edit file /etc/dovecot/conf.d/10-mail.conf file
vi /etc/dovecot/conf.d/10-mail.conf
mail_location = maildir:~/Maildir      # Line 24 - uncomment
Edit /etc/dovecot/conf.d/10-auth.conf
vi /etc/dovecot/conf.d/10-auth.conf
disable_plaintext_auth = yes           #line 10 - uncomment
auth_mechanisms = plain login          #Line 100 - Add the word: "login"
Edit file /etc/dovecot/conf.d/10-master.conf,
vi /etc/dovecot/conf.d/10-master.conf
#Line 91, 92 - Uncomment and add "postfix"
#mode = 0600
  user = postfix
  group = postfix
Start Dovecot service:
systemctl enable dovecot
systemctl start dovecot
Sequence 5. Testing Dovecot
Enter the following command in Terminal:
telnet localhost pop3
Enter the commands given marked with comment:
Trying ::1...
Connected to localhost.
Escape character is '^]'.
+OK Dovecot ready.
user sangwan               #Enter the mail user name
+OK
pass centos                #Enter the password
+OK Logged in.
retr 1                     #Type this command to view mail
+OK 415 octets
Return-Path: <sangwan@example.com>
X-Original-To: sangwan
Delivered-To: sangwan@example.com
Received: from localhost (localhost [IPv6:::1])
by server1.example.com (Postfix) with ESMTP id E2B522032F93
for <sangwan>; Fri, 24 Jul 2015 12:42:36 +0530 (IST)
Message-Id: <20150724071330.E2B522032F93@server1.example.com>
Date: Fri, 24 Jul 2015 12:42:36 +0530 (IST)
From: sangwan@example.com

Welcome to TheSkillPedia mail server
.
quit                       #Type 'quit' to exit
+OK Logging out.
Connection closed by foreign host.
Sequence 6. Install Squirrelmail
We can easily send/receive mails using webmail client called Squirrelmail via a web browser. Make sure that you’ve installed and enabled EPEL repository.

Install Squirrelmail:
# yum install squirrelmail
Change to /usr/share/squirrelmail/config/ and run conf.pl
# cd /usr/share/squirrelmail/config/
# ./conf.pl
SquirrelMail Configuration : Read: config.php (1.4.0)
---------------------------------------------------------
Main Menu --
1. Organization Preferences
2. Server Settings
3. Folder Defaults
4. General Options
5. Themes
6. Address Books
7. Message of the Day (MOTD)
8. Plugins
9. Database
10. Languages

D. Set pre-defined settings for specific IMAP servers

C Turn color off
S Save data
Q Quit

Command >> 1
SquirrelMail Configuration : Read: config.php (1.4.0)
---------------------------------------------------------
Organization Preferences
1. Organization Name : SquirrelMail
2. Organization Logo : ../images/sm_logo.png
3. Org. Logo Width/Height : (308/111)
4. Organization Title : SquirrelMail $version
5. Signout Page : 
6. Top Frame : _top
7. Provider link : http://squirrelmail.org/
8. Provider name : SquirrelMail

R Return to Main Menu
C Turn color off
S Save data
Q Quit

Command >> 1
We have tried to make the name SquirrelMail as transparent as
possible. If you set up an organization name, most places where
SquirrelMail would take credit will be credited to your organization.

If your Organization Name includes a '$', please precede it with a \. 
Other '$' will be considered the beginning of a variable that
must be defined before the $org_name is printed.
$version, for example, is included by default, and will print the
string representing the current SquirrelMail version.

[SquirrelMail]: TheSkillPedia
Similarly, set all the details such as organization title, logo, provider name in the above wizard. 
Once you done, press “S” to save the changes, and press “R” to return back to your main menu:
SquirrelMail Configuration : Read: config.php (1.4.0)
---------------------------------------------------------
Organization Preferences
1.  Organization Name      : TheSkillPedia
2.  Organization Logo      : ../images/sm_logo.png
3.  Org. Logo Width/Height : (308/111)
4.  Organization Title     : SquirrelMail $version
5.  Signout Page           : 
6.  Top Frame              : _top
7.  Provider link          : http://squirrelmail.org/
8.  Provider name          : TheSkillPedia Mail

R   Return to Main Menu
C   Turn color off
S   Save data
Q   Quit

Command >> S
Then R to return to main menu
SquirrelMail Configuration : Read: config.php (1.4.0)
---------------------------------------------------------
Main Menu --
1.  Organization Preferences
2.  Server Settings
3.  Folder Defaults
4.  General Options
5.  Themes
6.  Address Books
7.  Message of the Day (MOTD)
8.  Plugins
9.  Database
10. Languages

D.  Set pre-defined settings for specific IMAP servers

C   Turn color off
S   Save data
Q   Quit

Command >> 2
Enter “1”, Enter your mail domain (ex. TheSkillPedia. local) and press Enter key.
SquirrelMail Configuration : Read: config.php (1.4.0)
---------------------------------------------------------
Server Settings

General
-------
1. Domain : localhost
2. Invert Time : false
3. Sendmail or SMTP : Sendmail

A. Update IMAP Settings : localhost:143 (uw)
B. Change Sendmail Config : /usr/sbin/sendmail

R Return to Main Menu
C Turn color off
S Save data
Q Quit

Command >> 1

The domain name is the suffix at the end of all email addresses. If
for example, your email address is jdoe@example.com, then your domain
would be example.com.

[localhost]: example.com
Enter “3” and change from sendmail to Postfix MTA (i.e. SMTP):
SquirrelMail Configuration : Read: config.php (1.4.0)
---------------------------------------------------------
Server Settings

General
-------
1.  Domain                 : example.com
2.  Invert Time            : false
3.  Sendmail or SMTP       : Sendmail

A.  Update IMAP Settings   : localhost:143 (uw)
B.  Change Sendmail Config : /usr/sbin/sendmail

R   Return to Main Menu
C   Turn color off
S   Save data
Q   Quit

Command >> 3
Enter “2” to switch from sendmail MTA to postfix.
You now need to choose the method that you will use for sending
messages in SquirrelMail.  You can either connect to an SMTP server
or use sendmail directly.

  1.  Sendmail
  2.  SMTP
Your choice [1/2] [1]: 2
Now enter “S” followed by “Q” to save and exit Squirrelmail configuration.
Create a squirrelmail vhost in apache config file:
vi /etc/httpd/conf/httpd.conf
Add the following lines at the end:
Alias /webmail /usr/share/squirrelmail
<Directory /usr/share/squirrelmail>
Options Indexes FollowSymLinks
RewriteEngine On
AllowOverride All
DirectoryIndex index.php
Order allow,deny
Allow from all
</Directory>
Restart the Apache service:
systemctl restart httpd
Sequence 7. Access Webmail
Now navigate to http://ip-address/webmail or http://example.com/webmail from your browser. 
From this interface, you can send and receive mails to local users on this server.


-----------------SAMBA SERVER-----------------------------------------------------------------------------------

Server Side configuration

# yum install samba* -y
# mkdir /share
# chmod 777 /share/
chcon -t samba_share_t /share/
useradd user1
smbpasswd -a user1
useradd user2
smbpasswd -a user2

# nano /etc/samba/smb.conf
add in last

[share]
        comment = Publc Folder
        path = /share
        writable = yes
        public = no
        write list = user1 user2 @printadmin root
        create mask = 0664
        directory mask = 0775

testparm ------------>to check configurationfile
systemctl restart smb nmb


# firewall-cmd --permanent --add-service=samba
# firewall-cmd --complete-reload

On Client Side-------------------------------------

# yum install samba-client* cifs-utils -y

To Check the samba shared directory names from client side
# smbclient -L //<host name or IP address of the server> 

 smbclient -L //192.168.80.200  DONT ENTER ANY PASSWORD. JUST PRESS ENTER
 
 connect the samba server with user credentials and access the samba shared directory
 #smbclient //192.168.80.200/share -U user2
 
 How to access the samba server from windows system?
(i) Goto Windows system, click on START button, click on Run and type as
\\192.168.80.200\share  command.
(ii) Then provide samba user name and password if it prompts us.

mount using command 
[root@kvm share]# mount -t cifs -o username=user1 //192.168.80.200/share /mnt/share/
Password for user1@//192.168.80.200/share:  ***********

Note:
du :disk usage of each FILE, recursively for directories
df : amount of disk space available on the file system 

[root@kvm share]# df -hT
Filesystem                  Type      Size  Used Avail Use% Mounted on
devtmpfs                    devtmpfs  470M     0  470M   0% /dev
tmpfs                       tmpfs     487M     0  487M   0% /dev/shm
tmpfs                       tmpfs     487M  8.6M  478M   2% /run
tmpfs                       tmpfs     487M     0  487M   0% /sys/fs/cgroup
/dev/mapper/centos_kvm-root xfs        37G  5.8G   32G  16% /
/dev/sda1                   xfs      1014M  173M  842M  18% /boot
tmpfs                       tmpfs      98M   32K   98M   1% /run/user/1000
/dev/sr0                    iso9660   4.4G  4.4G     0 100% /run/media/binay/CentOS 7 x86_64
tmpfs                       tmpfs      98M     0   98M   0% /run/user/0
//192.168.80.200/share      cifs       17G  4.8G   13G  29% /mnt/share
[root@kvm share]# cd /mnt/share/









How to mount the samba shared directory using credential file?
(i) Create one file and put an entries of the user name and password details.
# vim /root/smbuser
 username=raju
 password=<user's samba password> (save
and exit the file)
(ii) Open /etc/fstab file and put an entries of the above credential details of user.
# vim /etc/fstab
 [LINUX NOTES FOR LEVEL 2]
Ratnakar Page 149
//server9.example.com/samba /mnt/samba cifs credentials=/root/smbuser,
multiuser, sec=ntlmssp
 0 0
 
 
 ----------------------------------------------------------------
 LVM https://www.tecmint.com/create-lvm-storage-in-linux/
 https://www.tecmint.com/extend-and-reduce-lvms-in-linux/
 
 -----------------------------------------------------------------
 
 Disk Partioning:
 ---------------------------------------------:
 1. Add a disk
 2. check  new disk information using fdisk -l command
 new added disk will look like this  :
 Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes

In above no partition is present.

3. Now we will create partitions :
fdisk /dev/sdb
Command (m for help): m
Command action
   a   toggle a bootable flag
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition
   g   create a new empty GPT partition table
   G   create an IRIX (SGI) partition table
   l   list known partition types
   m   print this menu
   n   add a new partition
   o   create a new empty DOS partition table
   p   print the partition table
   q   quit without saving changes
   s   create a new empty Sun disklabel
   t   change a partition's system id
   u   change display/entry units
   v   verify the partition table
   w   write table to disk and exit
   x   extra functionality (experts only)

Command (m for help): n ----------------->To crate new partition
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-41943039, default 2048): 
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-41943039, default 41943039): +10GB
Partition 1 of type Linux and of size 9.3 GiB is set

Note: Here we created primary partition. we can create only 4 primary partition only.But if we need more than 4 partition then 
we ceate extended partition and inside extended we can create multiple logical partitions.

Command (m for help): p   -------------> we can see partitiontable. here we can see one partition (/dev/sdb1) created successfully.

Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0xe7f560fd

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            2048    19533823     9765888   83  Linux



Command (m for help): n -----------------------> Now we will create extended partition.
select (default p): e
Partition number (2-4, default 2): 2
First sector (19533824-41943039, default 19533824): 
Using default value 19533824
Last sector, +sectors or +size{K,M,G} (19533824-41943039, default 41943039): +10GB
Partition 2 of type Extended and of size 9.3 GiB is set

Command (m for help): p
   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            2048    19533823     9765888   83  Linux
/dev/sdb2        19533824    39065599     9765888    5  Extended
 Till here we created one primary partition and one extended partition. Now we will create logical partitions inside extended partition.
 
 Command (m for help): n
Partition type:
   p   primary (1 primary, 1 extended, 2 free)
   l   logical (numbered from 5)
Select (default p): l
Adding logical partition 5
First sector (19535872-39065599, default 19535872): 
Using default value 19535872
Last sector, +sectors or +size{K,M,G} (19535872-39065599, default 39065599): +5GB
Partition 5 of type Linux and of size 4.7 GiB is set

Command (m for help): P
   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            2048    19533823     9765888   83  Linux
/dev/sdb2        19533824    39065599     9765888    5  Extended
/dev/sdb5        19535872    29300735     4882432   83  Linux

Partition type:
   p   primary (1 primary, 1 extended, 2 free)
   l   logical (numbered from 5)
Select (default p): l
Adding logical partition 6
First sector (29302784-39065599, default 29302784): 
Using default value 29302784
Last sector, +sectors or +size{K,M,G} (29302784-39065599, default 39065599): 
Using default value 39065599
Partition 6 of type Linux and of size 4.7 GiB is set

Command (m for help): p
   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1            2048    19533823     9765888   83  Linux
/dev/sdb2        19533824    39065599     9765888    5  Extended
/dev/sdb5        19535872    29300735     4882432   83  Linux
/dev/sdb6        29302784    39065599     4881408   83  Linux

Now we create two logical volumes (/dev/sdb5 & /dev/sdb6)
Now we will save it.
If you did mistake then you can quit without saving changes by entering q.
but if everything is ok press w to save changes.

Step 3:-Now we will format partitions which we just created.
mkfs.ext4 /dev/sdb1
[root@localhost ~]# mkfs.ext3 /dev/sdb5
[root@localhost ~]# mkfs.ext4 /dev/sdb6

Now we will mount partitions to a directory.
mkdir /ditiss
mkdir faculty-data
mkdir staff

[root@localhost ~]# ls /faculty-data/
[root@localhost ~]# mount -t auto /dev/sdb5 /faculty-data/
[root@localhost ~]# ls /faculty-data/
lost+found ---------------------->This indicates we succesfully mounted the partition.But if we restart, it will be gone. It is temporary
mounting. To make it parmanent we have to do entry in /etc/fstab.

[root@localhost ~]#
[root@localhost ~]# cat /etc/fstab 
/dev/sdb1	/ditiss  ext4   defaults  0 0
/dev/sdb5	/faculty-data   ext4   defaults  0 0
/dev/sdb1	/staff          ext4   defaults  0 0


------------------------------------------------------------------------------------------------------
LVM:-
Step 1: Create Partitions:
				ollow the below steps to create new partition.

Choose n to create new.
Choose p to create a primary partition.
Choose which number of partition we need to create.
Press Enter twice to use the full space of the Disk.
We need to change the type of newly created partition type t.
Which number of partition need to change, choose the number which we created its 1.
Here we need to change the type, we need to create LVM so we going to use the type code of LVM as 8e, 
if we do not know the type code Press L to list all type codes.
Print the Partition what we created to just confirm.
Here we can see the ID as 8e LINUX LVM.
Write the changes and exit fdisk.

sudo fdisk -l
evice     Boot   Start      End Sectors Size Id Type
/dev/sdb1          2048  4196351 4194304   2G 8e Linux LVM
/dev/sdb2       4196352 10485759 6289408   3G 8e Linux LVM



Step 2: Creating Physical Volumes:
$ sudo pvcreate /dev/sdb1 /dev/sdb2 
  Physical volume "/dev/sdb1" successfully created.
  Physical volume "/dev/sdb2" successfully created.
binay@ubuntu1:~/Desktop$ sudo pvs
  PV         VG Fmt  Attr PSize  PFree 
  /dev/sdb1     lvm2 ---   2.00g  2.00g
  /dev/sdb2     lvm2 ---  <3.00g <3.00g


Step3:
Creating Volume Groups
sudo vgcreate my_vg /dev/sdb1 /dev/sdb2
sudo vgs
  VG    #PV #LV #SN Attr   VSize VFree
  my_vg   2   0   0 wz--n- 4.99g 4.99g
  
  
  
sudo vgdisplay
  --- Volume group ---
  VG Name               my_vg
  System ID             
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  1
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                0
  Open LV               0
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               4.99 GiB
  PE Size               4.00 MiB
  Total PE              1278
  Alloc PE / Size       0 / 0   
  Free  PE / Size       1278 / 4.99 GiB
  VG UUID               BenTJC-eVsX-2CHp-uoTB-kB26-XSTe-5QDhwH
  
Step 4: Create logical volumes
sudo lvcreate -L 1000 -n vol02 my_vg   -----------> here we create logical volume named vol02 of 1000 mb inside Volume group my_vg
  Logical volume "vol02" created.
  
$ sudo lvdisplay
  --- Logical volume ---
  LV Path                /dev/my_vg/vol01
  LV Name                vol01
  VG Name                my_vg
  LV UUID                hfJe8c-25qe-CjQ8-jBPM-QWib-q43h-dD1MQ4
  LV Write Access        read/write
  LV Creation host, time ubuntu1, 2023-01-13 13:59:25 +0530
  LV Status              available
  # open                 0
  LV Size                400.00 MiB
  Current LE             100
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:0
   
  --- Logical volume ---
  LV Path                /dev/my_vg/vol02
  LV Name                vol02
  VG Name                my_vg
  LV UUID                5MYrez-ugcF-BFYS-KlUg-N25a-xOYf-6Gibsg
  LV Write Access        read/write
  LV Creation host, time ubuntu1, 2023-01-13 14:00:55 +0530
  LV Status              available
  # open                 0
  LV Size                1000.00 MiB
  Current LE             250
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:1




Step 5 : Create a filesystem on logical volumes:
$ sudo mkfs.ext4 /dev/my_vg/vol02 
mke2fs 1.46.5 (30-Dec-2021)
Creating filesystem with 256000 4k blocks and 64000 inodes
Filesystem UUID: 62badda3-44bf-4241-bff1-ff65cff65d6e
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (4096 blocks): done

Writing superblocks and filesystem accounting information: done

Step 6: Permanent mounting


Step 7: checking
cd /vol01/
binay@ubuntu1:/vol01$ ls
lost+found
binay@ubuntu1:/vol01$ df -h .
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/my_vg-vol02  966M   24K  900M   1% /vol01
binay@ubuntu1:/vol01$ 


Step 8: Extend a logical volume:-
sudo lvextend -L +800 /dev/my_vg/vol01
  Size of logical volume my_vg/vol01 changed from 400.00 MiB (100 extents) to 1.17 GiB (300 extents).
  Logical volume my_vg/vol01 successfully resized.

/vol01$ df -h .
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/my_vg-vol02  966M   24K  900M   1% /vol01

Note:-We have extended the logical volume but still have the same amount of space on the filesystem.
To make the filesystem grow and use the added space we need to resize the filesystem with the following command.

For xfs filesystem we use xfs_growfs and for ext we use resize2fs

# xfs_growfs /dev/myvg/mylv1 
meta-data=/dev/mapper/myvg-mylv1 isize=512    agcount=4, agsize=65536 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0 spinodes=0
data     =                       bsize=4096   blocks=262144, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal               bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
data blocks changed from 262144 to 524288
[root@ditiss1 ~]# df -h
Filesystem              Size  Used Avail Use% Mounted on
devtmpfs                1.9G     0  1.9G   0% /dev
tmpfs                   1.9G     0  1.9G   0% /dev/shm
tmpfs                   1.9G   13M  1.9G   1% /run
tmpfs                   1.9G     0  1.9G   0% /sys/fs/cgroup
/dev/sda3                32G  4.8G   27G  16% /
/dev/sda1               597M  178M  419M  30% /boot
tmpfs                   378M   24K  378M   1% /run/user/1000
/dev/mapper/myvg-mylv1  2.0G   33M  2.0G   2% /mylvm1
======================================================================
ext4 Filesystem:

----Now we have 2g myvg-mylv1. We will reduce it by 1g  
  [root@ditiss1 mylvm1]# ls
f1  f2  f3  f4  f5  f6  lost+found
[root@ditiss1 mylvm1]# cd 
[root@ditiss1 ~]# lvs
  LV   VG    Attr       LSize Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  myl1 myvg1 -wi-ao---- 2.00g    

  1.Unmount the Filesystem
[root@ditiss1 ~]# umount /mylvm1 
[root@ditiss1 ~]# e2fsck -f /dev/myvg1/myl1 
e2fsck 1.42.9 (28-Dec-2013)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/myvg1/myl1: 17/131072 files (0.0% non-contiguous), 17196/524288 blocks

2.Resize the Filesystem:

# resize2fs -f /dev/myvg1/myl1 +1G
resize2fs 1.42.9 (28-Dec-2013)
Resizing the filesystem on /dev/myvg1/myl1 to 262144 (4k) blocks.
The filesystem on /dev/myvg1/myl1 is now 262144 blocks long.

3.Reduce the Logical Volume: 
# lvreduce -L -1G /dev/myvg1/myl1 
  WARNING: Reducing active logical volume to 1.00 GiB.
  THIS MAY DESTROY YOUR DATA (filesystem etc.)
Do you really want to reduce myvg1/myl1? [y/n]: y
  Size of logical volume myvg1/myl1 changed from 2.00 GiB (512 extents) to 1.00 GiB (256 extents).
  Logical volume myvg1/myl1 successfully resized.

4.Remount the Filesystem:
[root@ditiss1 ~]# mount /dev/myvg1/myl1 /mylvm1/
[root@ditiss1 ~]# ls /mylvm1/    ---------------> Data is present(No need to backup in ext4 filesystem)
f1  f2  f3  f4  f5  f6  lost+found

---------------------------------------
for xfs filesystem: 
# lvextend -L +1G /dev/myvg1/mylv2 
  Size of logical volume myvg1/mylv2 changed from 1.00 GiB (256 extents) to 2.00 GiB (512 extents).
  Logical volume myvg1/mylv2 successfully resized.
[root@ditiss1 ~]# lvs
  LV    VG    Attr       LSize Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  myl1  myvg1 -wi-ao---- 1.00g                                                    
  mylv2 myvg1 -wi-ao---- 2.00g                                                    
[root@ditiss1 ~]# df -h
Filesystem               Size  Used Avail Use% Mounted on
devtmpfs                 1.9G     0  1.9G   0% /dev
tmpfs                    1.9G     0  1.9G   0% /dev/shm
tmpfs                    1.9G   13M  1.9G   1% /run
tmpfs                    1.9G     0  1.9G   0% /sys/fs/cgroup
/dev/sda3                 32G  4.8G   27G  16% /
/dev/sda1                597M  178M  419M  30% /boot
tmpfs                    378M   32K  378M   1% /run/user/1000
/dev/mapper/myvg1-myl1   976M  2.6M  912M   1% /mylvm1
/dev/mapper/myvg1-mylv2 1014M   33M  982M   4% /mylvm2
[root@ditiss1 ~]# xfs_growfs /dev/myvg1/myl
myl1   mylv2  
[root@ditiss1 ~]# xfs_growfs /dev/myvg1/mylv2 
meta-data=/dev/mapper/myvg1-mylv2 isize=512    agcount=4, agsize=65536 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0 spinodes=0
data     =                       bsize=4096   blocks=262144, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal               bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
data blocks changed from 262144 to 524288
[root@ditiss1 ~]# df -h
Filesystem               Size  Used Avail Use% Mounted on
devtmpfs                 1.9G     0  1.9G   0% /dev
tmpfs                    1.9G     0  1.9G   0% /dev/shm
tmpfs                    1.9G   13M  1.9G   1% /run
tmpfs                    1.9G     0  1.9G   0% /sys/fs/cgroup
/dev/sda3                 32G  4.8G   27G  16% /
/dev/sda1                597M  178M  419M  30% /boot
tmpfs                    378M   32K  378M   1% /run/user/1000
/dev/mapper/myvg1-myl1   976M  2.6M  912M   1% /mylvm1
/dev/mapper/myvg1-mylv2  2.0G   33M  2.0G   2% /mylvm2

Now we will reduce:-
1.Take Backup

# xfsdump -f /mnt/mybackup.dump /dev/myvg1/mylv2
xfsdump: using file dump (drive_simple) strategy
xfsdump: version 3.1.7 (dump format 3.0) - type ^C for status and control

2. Unmount
umount /mylvm2
3. Reduce:
# lvreduce -L -1G /dev/myvg1/mylv2 
  WARNING: Reducing active logical volume to 1.00 GiB.
  THIS MAY DESTROY YOUR DATA (filesystem etc.)
Do you really want to reduce myvg1/mylv2? [y/n]: y
  Size of logical volume myvg1/mylv2 changed from 2.00 GiB (512 extents) to 1.00 GiB (256 extents).
  Logical volume myvg1/mylv2 successfully resized.
[root@ditiss1 ~]# lvs
  LV    VG    Attr       LSize Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  myl1  myvg1 -wi-ao---- 1.00g                                                    
  mylv2 myvg1 -wi-a----- 1.00g   


4.Format:-
# mkfs.xfs -f /dev/myvg1/mylv2 
meta-data=/dev/myvg1/mylv2       isize=512    agcount=4, agsize=65536 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0, sparse=0
data     =                       bsize=4096   blocks=262144, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal log           bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0


5. Mounting:
# mount /dev/myvg1/mylv2 /mylvm2/
[root@ditiss1 ~]# ls /mylvm2/

6. Restoring Data:

# xfsrestore -f /mnt/mybackup.dump /mylvm
mylvm1/ mylvm2/ 
[root@ditiss1 ~]# xfsrestore -f /mnt/mybackup.dump /mylvm2
xfsrestore: using file dump (drive_simple) strategy
 |
 |
xfsrestore:   stream 0 /mnt/mybackup.dump OK (success)
xfsrestore: Restore Status: SUCCESS
[root@ditiss1 ~]# ls /mylvm2
f1  f{1.9}  f2  f3  f4  f5  f6  f7  f8  f9













Link:  https://www.thegeekdiary.com/logical-volume-vg-lv-contains-a-filesystem-in-use-while-removing-lvm-filesystem


------------------------------------------------------------------------------------------------------------------------
Uncomplicated Firewall: https://www.digitalocean.com/community/tutorials/ufw-essentials-common-firewall-rules-and-commands

--------------------------------------------------------------------------------------------------------------------------


_______________________________________________________SSH____________________________________________________
rpm -qf /bin/ssh
openssh-clients-7.4p1-22.el7_9.x86_64
[root@localhost ~]# rpm -ql openssh-clients-7.4p1-22.el7_9.x86_64
/etc/ssh/ssh_config
/usr/bin/scp
/usr/bin/sftp
/usr/bin/slogin
/usr/bin/ssh
/usr/bin/ssh-add
/usr/bin/ssh-agent
/usr/bin/ssh-copy-id
/usr/bin/ssh-keyscan
/usr/lib64/fipscheck/ssh.hmac
/usr/libexec/openssh/ssh-pkcs11-helper
/usr/share/man/man1/scp.1.gz
/usr/share/man/man1/sftp.1.gz
/usr/share/man/man1/slogin.1.gz
/usr/share/man/man1/ssh-add.1.gz
/usr/share/man/man1/ssh-agent.1.gz
/usr/share/man/man1/ssh-copy-id.1.gz
/usr/share/man/man1/ssh-keyscan.1.gz
/usr/share/man/man1/ssh.1.gz
/usr/share/man/man5/ssh_config.5.gz
/usr/share/man/man8/ssh-pkcs11-helper.8.gz


Similarly for server:-
#rpm -qa | grep ssh
sshpass-1.06-2.el7.x86_64
openssh-cavs-7.4p1-22.el7_9.x86_64
openssh-clients-7.4p1-22.el7_9.x86_64
openssh-server-sysvinit-7.4p1-22.el7_9.x86_64
openssh-askpass-7.4p1-22.el7_9.x86_64
openssh-7.4p1-22.el7_9.x86_64
libssh2-1.8.0-4.el7.x86_64
openssh-ldap-7.4p1-22.el7_9.x86_64
openssh-server-7.4p1-22.el7_9.x86_64
openssh-keycat-7.4p1-22.el7_9.x86_64'

[root@localhost ~]# rpm -ql openssh-server-7.4p1-22.el7_9.x86_64
/etc/pam.d/sshd
/etc/ssh/sshd_config
/etc/sysconfig/sshd
/usr/lib/systemd/system/sshd-keygen.service
/usr/lib/systemd/system/sshd.service
/usr/lib/systemd/system/sshd.socket
/usr/lib/systemd/system/sshd@.service
/usr/lib64/fipscheck/sshd.hmac
/usr/libexec/openssh/sftp-server
/usr/sbin/sshd
/usr/sbin/sshd-keygen
/usr/share/man/man5/moduli.5.gz
/usr/share/man/man5/sshd_config.5.gz
/usr/share/man/man8/sftp-server.8.gz
/usr/share/man/man8/sshd.8.gz
/var/empty/sshd


#yum install sshd -y
syste start sshd

Lets change Default portt 22 of ssh
vi /etc/ssh/sshd_config 
edit port no, save and exit.

when you resatrt sshd you will get error because of port no will be prevented by selinux.
 We changed form port 22 to 3222. now we have to allow 3222 port in selinux
 
 
 To add any port to selinux we need to know type of object of tha that services 
 $ sudo semanage port -l | grep ssh
ssh_port_t                     tcp      22



Now we will add port 3222 to ssh_port_t object
#semanage -a -t ssh_port_t -p tcp 22 
	-a :- to add
	-t :-SELinux Type for the object
	-p :-Protocol for the specified port (tcp|udp)

$ sudo semanage port -l | grep ssh
ssh_port_t                     tcp      3222, 22


Mention what is the difference between Nginx and Apache?

Nginx is an event based web server
All request are handled by a single thread.
Nginx avoids child processes idea.
Nginx resembles speed
Nginx is better when it comes to memory consumption and connection
Nginx is better when you want load-balancing
For PHP, Nginx might be preferable as it supports PHP internally
Nginx do not support O.S like IBMi and OpenVMS.
Nginx comes only with core features
Nginx performance and scalability do not depend on hardware


Apache is a process based server
Single thread handles a single request.
Apache is based on child processes
Apache resemble power
Apache is not up-to the mark when it comes to memory consumption and connection
Apache will refuse new connections when traffic reaches the limit of processes
Apache support’s PHP, Python, Perl and other languages using plugins. It is useful when application is based on Python or Ruby
Apache support much wider range of O.S
Apache provides lot more functionality than Nginx
Apache is dependent on hardware components like CPU and memory



Squid SERVER
---------------------------------------------------------------------
Through squid we can also connect internet to a machine.
Situation :- We have 2 client machine which are in host only mode. Now we want to access internet.
So we will configure squid.
1 SERVER 2 CLIENT.

SERVER:-
-----------------------------
Need two adapter. one is nat mode and one is host only mode.

1. install squid 
sudo yum install squid

2.edit config file.
sudo nano /etc/squid/squid.conf
just uncomment below line
cache_dir ufs /var/spool/squid 100 16 256

here 100 means 100mb .It can store 100mb data. we can modify it.
16 means, It will create 16 directories inside /var/spool/squid and 256 means inside every directory, there will be
256 sub directories. By default /var/spool/squid is empty.In some proxy server without directories, servie will not
start.So before starting service, first create directories inside /var/spool/squid by command:-
squid -z

ip a | grep ens33
2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    inet 192.168.80.128/24 brd 192.168.80.255 scope global noprefixroute dynamic ens33
ip a | grep ens36
5: ens36: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    inet 192.168.10.134/24 brd 192.168.10.255 scope global noprefixroute dynamic ens36

Here ens33 in nat mode and ens36 in host only mode.


On Client side:
------------------------------------
1. Both clients are in host only mode.Open browser and try to access any website. It will give error.
GO to browser setting and in proxy setting. Add ip of server of hostonly adapter (In my case 192.168.10.134) in proxy setting.
Now reffresh web page, you will be able to access that webpages.


Now for machine 192.168.10.132 block youtube.com
write below rule in configuration file.

acl client1 src 192.168.10.132
acl website dstdomain .youtube.com
http_access deny client1 website

restart the server.

Now block the many website. SO for many website we have to create many acls.
So to avoid many acl, we will make a list of websites in a file and thorug file we block websites.
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#
acl client1 src 192.168.10.132
acl website dstdomain .youtube.com
acl bad_list dstdomain "/etc/squid/bad_sites.txt"
http_access deny client1 website
http_access deny bad_list

cat bad_sites.txt 
.fb.com
.facebook.com
.youtube.com
.twitter.com
.amazon.com

now we will see acl based on time.
all sevendays represented in acl like given below:
SMTWHFA
HERE H means tHursday
	 A means sAturday

In squid by default everything is allowed. So we use deny option always.
Like if you want to allow news websites on monday friday between 18:00 to 20:00
so you will write acl rule but you will be able to access news websites after this time also.


So I want to deny news websites on wednesday, friday & sAturday between 14:00 to 20:00




 INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#
acl client1 src 192.168.10.132
acl website dstdomain .youtube.com
acl bad_list dstdomain "/etc/squid/bad_sites.txt
acl news_time time MWHFA 10:00-20:00
acl news_sites dstdomain "/etc/squid/news.txt"
acl bad_words url_regex -i "/etc/squid/bad_words"
http_access deny bad_words
http_access deny client1 website
http_access deny bad_list
http_access deny news_sites news_time
