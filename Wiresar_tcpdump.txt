TCPDUMP
1. Capture all packets
tcpdump

2. Capture packets from a specific host
tcpdump host 192.168.1.1

3. Capture packets to and from a specific host
tcpdump src host 192.168.1.1 or dst host 192.168.1.1


4. Capture packets from a specific network
tcpdump net 192.168.1.0/24

5. Capture packets on a specific port
tcpdump port 80

6. Capture packets to and from a specific port
tcpdump src port 80 or dst port 80


7. Capture TCP packets
 
tcpdump tcp
8. Capture UDP packets
 
tcpdump udp
9. Capture packets of a specific protocol (e.g., ICMP)
 
tcpdump icmp
10. Capture packets with a specific destination IP and port
 
tcpdump dst 192.168.1.1 and port 22
11. Capture packets from a specific MAC address
 
tcpdump ether src 00:11:22:33:44:55
12. Capture packets of a specific size
 
tcpdump less 100
13. Capture packets with a specific string in the payload
 
tcpdump -A | grep "specific string"
14. Capture packets on a specific interface
 
tcpdump -i eth0
15. Capture and write packets to a file
tcpdump -w capture.pcap

16. Read packets from a file
tcpdump -r capture.pcap

17. Combine multiple filters
 
tcpdump 'src 192.168.1.1 and (dst port 80 or dst port 443)'
Example Commands
Capture HTTP traffic (assuming HTTP runs on port 80):

 
tcpdump tcp port 80
Capture DNS traffic:

 
tcpdump udp port 53
Capture all traffic except SSH:

 
tcpdump not port 22
Capture traffic from a specific subnet:

 
tcpdump net 10.0.0.0/8


Wireshark:-
Capture filters in Wireshark limit the packets that get captured. Here are some useful examples:

Basic Syntax
 
filter_expression
1. Capture all packets
 
ip
2. Capture packets from a specific host
 
host 192.168.1.1
3. Capture packets to and from a specific host
 
src host 192.168.1.1 or dst host 192.168.1.1
4. Capture packets from a specific network
 
net 192.168.1.0/24
5. Capture packets on a specific port
 
port 80
6. Capture TCP packets
 
tcp
7. Capture UDP packets
 
udp
8. Capture ICMP packets
 
icmp
9. Capture packets with a specific destination IP and port
 
dst 192.168.1.1 and port 22
10. Capture packets from a specific MAC address
 
ether host 00:11:22:33:44:55
11. Capture packets of a specific size
 
less 100
12. Capture traffic on a specific interface
To set this in the GUI, you would select the specific interface in the "Capture Interfaces" dialog.

Display Filters
Display filters in Wireshark allow you to filter the captured packets during analysis. Here are some useful examples:

Basic Syntax
 
filter_expression
1. Display packets from a specific IP
 
ip.addr == 192.168.1.1
2. Display packets from a specific MAC address
 
eth.addr == 00:11:22:33:44:55
3. Display packets on a specific port
 
tcp.port == 80
4. Display packets to and from a specific IP and port
 
ip.addr == 192.168.1.1 and tcp.port == 80
5. Display TCP packets
 
tcp
6. Display UDP packets
 
udp
7. Display ICMP packets
 
icmp
8. Display HTTP packets
 
http
9. Display DNS packets
 
dns
10. Display packets containing a specific string in the payload
 
frame contains "specific string"
11. Display packets within a specific subnet
 
ip.addr == 192.168.1.0/24
12. Display packets with a specific TCP flag set (e.g., SYN)
 
tcp.flags.syn == 1
13. Combine multiple display filters
 
(ip.addr == 192.168.1.1 and tcp.port == 80) or (ip.addr == 192.168.1.2 and tcp.port == 443)
Example Commands for Wireshark GUI
To set a capture filter: Open Wireshark, select your interface, and enter the capture filter in the "Capture Filter" field.
To set a display filter: Open Wireshark, start capturing packets, and enter the display filter in the "Display Filter" field at the top.