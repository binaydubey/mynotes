 Title: Injection [ RCE ]
________________________
1. What is OS Command Injection?
++++++++++++++++++++++++++++++++
a. Command Injection occurs when server-side code (like PHP) in a web application makes a system call on the hosting machine. like:

system($_GET['x'])
exec($_GET['x'])
passthru($_GET['x'])

b. The worst thing they could do would be to spawn a reverse shell to become the user that the web server is running as.

c. Once the attacker has a foothold on the web server, they can start the usual enumeration of your systems and start looking for ways to pivot around.

2. Executing arbitrary commands:
++++++++++++++++++++++++++++++++
a. Consider a shopping application that lets the user view whether an item is in stock in a particular store. This information is accessed via a URL like:

https://insecure-website.com/stockStatus?productID=381&storeID=29

b. the functionality is implemented by calling out to a shell command with the product and store IDs as arguments:

# stockreport.pl 381 29

This command outputs the stock status for the specified item, which is returned to the user.

c. An attacker can submit the following input to execute an arbitrary command:

& echo aiwefwlguh &

-> If this input is submitted in the productID parameter, then the command executed by the application is:

stockreport.pl & echo aiwefwlguh & 29

-> As a result, the output returned to the user is:

Error - productID was not provided
aiwefwlguh
29: command not found

3. Useful commands:
+++++++++++++++++++
When you have identified an OS command injection vulnerability, it is generally useful to execute some initial commands to obtain information about the system

Purpose of command		Linux			Windows
=====================================================
Name of current user		whoami			whoami
Operating system			uname -a		ver
Network configuration	ifconfig		ipconfig /all
Network connections		netstat -an	netstat -an
Running processes		ps -ef			tasklist